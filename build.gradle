plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'

def generated = 'src/main/generated'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

clean {
	delete file(generated)
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// SQLite
	implementation 'org.xerial:sqlite-jdbc:3.46.1.0'

	// Hibernate Dialects
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// BCrypt
	implementation 'org.mindrot:jbcrypt:0.4'

	// Lombok (main)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Lombok (test)
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}